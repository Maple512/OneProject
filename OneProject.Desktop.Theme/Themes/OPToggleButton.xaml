<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:OneProject.Desktop.Converters"
                    xmlns:themes="clr-namespace:OneProject.Desktop.Themes"
                    xmlns:assists="clr-namespace:OneProject.Desktop.Assists">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ThemeBase.xaml" />
        <ResourceDictionary Source="OPIcon.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <themes:OPIcon x:Key="AContentDefault"
                   x:Shared="False"
                   Kind="Checked" />

    <themes:OPIcon x:Key="BContentDefault"
                   x:Shared="False"
                   Kind="Close" />

    <Style TargetType="{x:Type themes:OPToggleButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Style.Resources>
            <ResourceDictionary>
                <Style TargetType="themes:OPIcon"
                       BasedOn="{StaticResource {x:Type themes:OPIcon}}">
                    <Setter Property="Height"
                            Value="20" />
                    <Setter Property="Width"
                            Value="20" />
                    <Setter Property="FlowDirection"
                            Value="LeftToRight" />
                </Style>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Background"
                Value="{DynamicResource Brush.Main}" />
        <Setter Property="ABackground"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property="BBackground"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="Foreground"
                Value="{DynamicResource Brush.A}" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type themes:OPToggleButton}">
                    <Grid Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:ShadowElevationAssist.Elevation), Converter={x:Static converters:ShadowElevationConverter.Instance}}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.38"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="*"
                                                      To="Checked">
                                        <Storyboard FillBehavior="HoldEnd">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OffScaleTransform"
                                                                           Storyboard.TargetProperty="ScaleX"
                                                                           Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.0"
                                                                      Value="1" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OnScaleTransform"
                                                                           Storyboard.TargetProperty="ScaleX"
                                                                           Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1"
                                                                      Value="0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.2"
                                                                      Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Checked"
                                                      To="Unchecked">
                                        <Storyboard FillBehavior="HoldEnd">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OnScaleTransform"
                                                                           Storyboard.TargetProperty="ScaleX"
                                                                           Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.0"
                                                                      Value="1" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OffScaleTransform"
                                                                           Storyboard.TargetProperty="ScaleX"
                                                                           Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1"
                                                                      Value="0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.2"
                                                                      Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="OffScaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="0"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="OnScaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="OffScaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="OnScaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="0"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateCheck"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="G_A"
                              Background="{TemplateBinding ABackground}"
                              RenderTransformOrigin=".5,.5">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding AContent}"
                                              ContentTemplate="{TemplateBinding AContentTemplate}"
                                              FlowDirection="LeftToRight" />
                            <Grid.Clip>
                                <EllipseGeometry RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width, Converter={StaticResource MathDivisionConverter}, ConverterParameter=2.0}"
                                                 RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource MathDivisionConverter}, ConverterParameter=2.0}">
                                    <EllipseGeometry.Center>
                                        <MultiBinding Converter="{StaticResource PointValueConverter}">
                                            <Binding Converter="{StaticResource MathDivisionConverter}"
                                                     ConverterParameter="2.0"
                                                     Path="Width"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Converter="{StaticResource MathDivisionConverter}"
                                                     ConverterParameter="2.0"
                                                     Path="Height"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </EllipseGeometry.Center>
                                </EllipseGeometry>
                            </Grid.Clip>
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="OffScaleTransform"
                                                ScaleX="1"
                                                ScaleY="1" />
                            </Grid.RenderTransform>
                        </Grid>
                        <Grid x:Name="G_B"
                              Background="{TemplateBinding BBackground}"
                              RenderTransformOrigin=".5,.5">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding BContent}"
                                              ContentTemplate="{TemplateBinding BContentTemplate}"
                                              FlowDirection="LeftToRight" />
                            <Grid.Clip>
                                <EllipseGeometry RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width, Converter={StaticResource MathDivisionConverter}, ConverterParameter=2.0}"
                                                 RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource MathDivisionConverter}, ConverterParameter=2.0}">
                                    <EllipseGeometry.Center>
                                        <MultiBinding Converter="{StaticResource PointValueConverter}">
                                            <Binding Converter="{StaticResource MathDivisionConverter}"
                                                     ConverterParameter="2.0"
                                                     Path="Width"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Converter="{StaticResource MathDivisionConverter}"
                                                     ConverterParameter="2.0"
                                                     Path="Height"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </EllipseGeometry.Center>
                                </EllipseGeometry>
                            </Grid.Clip>
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="OnScaleTransform"
                                                ScaleX="0"
                                                ScaleY="1" />
                            </Grid.RenderTransform>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Width"
                Value="32" />
        <Setter Property="assists:ShadowElevationAssist.Elevation"
                Value="Se3" />
        <Setter Property="AContent"
                Value="{StaticResource AContentDefault}" />
        <Setter Property="BContent"
                Value="{StaticResource BContentDefault}" />
    </Style>

</ResourceDictionary>
