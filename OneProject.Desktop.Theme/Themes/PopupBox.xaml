<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:OneProject.Desktop.Theme.Themes"
                    xmlns:assists="clr-namespace:OneProject.Desktop.Theme.Assists"
                    xmlns:controlex="clr-namespace:ControlzEx;assembly=ControlzEx"
                    xmlns:converters="clr-namespace:OneProject.Desktop.Theme.Converters">

    
    <Style x:Key="PopupBoxButton"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="{DynamicResource Brush.A}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Padding"
                Value="16,0,16,16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3"
                                                      To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0.48"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="MouseOverBorder"
                                Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Opacity="0" />
                        <themes:OPBorder MinHeight="48"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    Focusable="False"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Bottom" />
    </Style>

    <themes:OPIcon x:Key="PopupBoxToggleContent"
                  Width="24"
                  Height="24"
                  Margin="4,0,4,0"
                  x:Shared="False"
                   Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=themes:PopupBox}, Path=Foreground}"
                  Kind="DotsVertical" />
    
    <Style x:Key="OPPopupBox"
           TargetType="{x:Type themes:PopupBox}">
        <Style.Resources>
            <converters:FirstNonNullConverter x:Key="FirstNonNullConverter" />
        </Style.Resources>
        <Setter Property="Focusable"
                Value="True" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Padding"
                Value="0,8,0,8" />
        <Setter Property="PopupElevation"
                Value="Se6" />
        <Setter Property="PopupHorizontalOffset"
                Value="0" />
        <Setter Property="CornerRadius"
                Value="0" />
        <Setter Property="PopupVerticalOffset"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type themes:PopupBox}">
                    <ControlTemplate.Resources>
                        <converters:ElevationMarginConverter x:Key="ElevationMarginConverter" />
                        <converters:ElevationRadiusConverter x:Key="ElevationRadiusConverter"
                                                      Multiplier="-1" />
                        <converters:ElevationRadiusConverter x:Key="RtlElevationRadiusConverter"
                                                      Multiplier="1" />

                        <Style TargetType="Separator"
                               BasedOn="{StaticResource OPSeparator}" />
                        <Style x:Key="ToggleButtonStyle"
                               TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <themes:OPBorder Padding="{TemplateBinding Padding}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                    Focusable="False"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <ToggleButton x:Name="PART_Toggle"
                                      VerticalAlignment="Center"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding ToggleContent}"
                                      ContentTemplate="{TemplateBinding ToggleContentTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ToggleContentTemplateSelector}"
                                      Cursor="Hand"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
                                      IsTabStop="{TemplateBinding IsTabStop}"
                                      Padding="0"
                                      Style="{StaticResource ToggleButtonStyle}"
                                      TabIndex="{TemplateBinding TabIndex}" />
                        <controlex:PopupEx x:Name="PART_Popup"
                                           AllowsTransparency="True"
                                           CustomPopupPlacementCallback="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupPlacementMethod}"
                                           HorizontalOffset="{TemplateBinding PopupElevation, Converter={StaticResource ElevationRadiusConverter}}"
                                           IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
                                           Placement="Custom"
                                           PopupAnimation="Fade"
                                           VerticalOffset="{TemplateBinding PopupElevation, Converter={StaticResource ElevationRadiusConverter}}">
                            <controlex:PopupEx.PlacementTarget>
                                <MultiBinding Converter="{StaticResource FirstNonNullConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="PlacementTarget" />
                                    <Binding ElementName="PART_Toggle" />
                                </MultiBinding>
                            </controlex:PopupEx.PlacementTarget>
                            <themes:OPCard Margin="{TemplateBinding PopupElevation, Converter={StaticResource ElevationMarginConverter}}"
                                           Padding="{TemplateBinding Padding}"
                                           assists:ShadowElevationAssist.Elevation="{TemplateBinding PopupElevation}"
                                           Content="{TemplateBinding PopupContent}"
                                           ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                           Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"
                                           RenderOptions.ClearTypeHint="Enabled"
                                           CornerRadius="{TemplateBinding CornerRadius}">
                                <themes:OPCard.Resources>
                                    <Style TargetType="Button"
                                           BasedOn="{StaticResource PopupBoxButton}" />
                                </themes:OPCard.Resources>
                            </themes:OPCard>
                        </controlex:PopupEx>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value="0.38" />
                        </Trigger>
                        <Trigger Property="FlowDirection"
                                 Value="RightToLeft">
                            <Setter TargetName="PART_Popup"
                                    Property="HorizontalOffset"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:ShadowElevationAssist.Elevation), Converter={StaticResource RtlElevationRadiusConverter}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontWeight"
                Value="Normal" />
        <Setter Property="ToggleContent"
                Value="{StaticResource PopupBoxToggleContent}" />
        <Setter Property="ToolTipService.IsEnabled"
                Value="{Binding IsPopupOpen, RelativeSource={RelativeSource Self}, Converter={StaticResource NotConverter}}" />
    </Style>

</ResourceDictionary>
