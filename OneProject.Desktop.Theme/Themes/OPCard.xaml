<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:OneProject.Desktop.Theme.Converters" xmlns:assists="clr-namespace:OneProject.Desktop.Theme.Assists"
        xmlns:themes="clr-namespace:OneProject.Desktop.Theme.Themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="OPTextBlock.xaml" />
        <ResourceDictionary Source="ThemeBase.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:NullToVisibleConverter x:Key="NullToVisibleConverter" />
    <converters:NotNullToVisibleConverter x:Key="NotNullToVisibleConverter" />
    <converters:TrueToVisibleConverter x:Key="BoolToVisibilityConverter" />

    <Style TargetType="{x:Type themes:OPCard}">
        <Setter Property="Background" Value="{DynamicResource Brush.Window.Background}" />
        <!--<Setter Property="assists:LoadingAssist.IsLoading" Value="False" />-->
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="CornerRadius" Value="{StaticResource Number.CornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type themes:OPCard}">
                    <ControlTemplate.Resources>
                        <converters:ShadowOpacityMaskConverter x:Key="ShadowOpacityMaskConverter" />
                    </ControlTemplate.Resources>
                    <Grid Margin="{TemplateBinding Margin}">
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(assists:ShadowAssist.CacheMode)}">
                            <AdornerDecorator.OpacityMask>
                                <MultiBinding Converter="{StaticResource ShadowOpacityMaskConverter}">
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(assists:ShadowElevationAssist.Elevation)"
                                            RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </AdornerDecorator.OpacityMask>
                            <Border CornerRadius="{TemplateBinding CornerRadius}"
                                    Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assists:ShadowElevationAssist.Elevation), Converter={x:Static converters:ShadowElevationConverter.Instance}}">
                                <Border Background="{TemplateBinding Background}" Clip="{TemplateBinding ContentClip}" />
                            </Border>
                        </AdornerDecorator>
                        <Border x:Name="P_Container" CornerRadius="{TemplateBinding CornerRadius}">
                            <Border x:Name="PART_ClipBorder" Background="{TemplateBinding Background}" Clip="{TemplateBinding ContentClip}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Border x:Name="CardHeaderBorder" Padding="{TemplateBinding Padding}" Grid.Row="0"
                                            BorderBrush="{DynamicResource Brush.Border}"
                                            BorderThickness="{StaticResource Number.BorderThickness.Underline}"
                                            Background="{DynamicResource Brush.Background}"
                                            TextElement.Foreground="{DynamicResource Brush.Foreground}"
                                            Visibility="{TemplateBinding HasHeader}" VerticalAlignment="Center">
                                        <Grid>
                                            <ContentPresenter Content="{TemplateBinding Header}"
                                                    Visibility="{TemplateBinding Header,Converter={StaticResource NotNullToVisibleConverter}}" />
                                            <DockPanel
                                                    Visibility="{TemplateBinding Header,Converter={StaticResource NullToVisibleConverter}}">
                                                <TextBlock Style="{StaticResource H5}" DockPanel.Dock="Left" Text="{TemplateBinding Title}" />
                                                <ContentPresenter Content="{TemplateBinding TitleAction}" DockPanel.Dock="Right"
                                                        HorizontalAlignment="Right" />
                                            </DockPanel>
                                        </Grid>
                                    </Border>
                                    <themes:OPLoading IsLoading="{TemplateBinding assists:LoadingAssist.IsLoading}" Grid.Row="1">
                                        <Border Padding="{TemplateBinding Padding}">
                                            <ContentPresenter x:Name="P_ContentPresenter" Content="{TemplateBinding ContentControl.Content}"
                                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
                                        </Border>
                                    </themes:OPLoading>
                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ClipContent" Value="True">
                            <Setter TargetName="P_ContentPresenter" Property="Clip"
                                    Value="{Binding ContentClip, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="assists:ShadowElevationAssist.Elevation" Value="Se3" />
    </Style>

</ResourceDictionary>
