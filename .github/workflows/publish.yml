name: Push to release

on:
  workflow_dispatch:
    # inputs:
    #   tag_name:
    #     required: true
    #   pre_release:
    #     required: true

jobs:
  Build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read common.props
        id: CommonProps
        uses: juliangruber/read-file-action@v1
        with:
          path: ./common.props

      - name: Get version
        id: Version
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: "(?<=>)[^<>]+(?=</Version>)"
          regex_flags: "gim"
          search_string: "${{ steps.CommonProps.outputs.content }}"

      - name: Determine if the tag exists
        uses: mukunku/tag-exists-action@v1.6.0
        id: Tag
        with:
          tag: ${{ steps.Version.outputs.first_match }}
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
    outputs:
      HasTag: ${{steps.Tag.outputs.exists}}
      Version: ${{steps.Version.outputs.first_match}}

  Push:
    needs: Build
    if: ${{needs.Build.outputs.HasTag == 'false'}}
    runs-on: windows-latest
    env:
      ZipName: OneProject.Desktop_v${{needs.Build.outputs.Version}}
      prerelease: ${{contains(needs.Build.outputs.Version,'rc')}}
    # work-directory: ${{steps.Tag.outputs.Package}}
    steps:
      # - run: echo "${{toJson(needs)}}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"
          dotnet-quality: "preview"

      - name: dotnet restory
        run: dotnet restore

      - name: dotnet build
        run: dotnet build

      - name: dotnet test
        run: dotnet test --no-restore --no-build

      - name: dotnet publish
        run: dotnet publish -c Release -a --no-build --no-restore -o ./${{env.ZipName}}

      - name: zip
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: zip
          filename: ${{env.ZipName}}.zip
          path: ${{env.ZipName}}

      - name: push release
        uses: ncipollo/release-action@v1
        with:
          token: ${{secrets.ACTION_TOKEN}}
          name: v${{needs.Build.outputs.Version}}
          tag: v${{needs.Build.outputs.Version}}
          prerelease: ${{env.prerelease}}
          artifacts: ${{env.ZipName}}.zip
