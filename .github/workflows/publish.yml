name: Publish to release

on:
  push:
    tags:
      - Release**_v**

jobs:
  Build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Version From Tag
        uses: olegtarasov/get-tag@v2.1.3
        id: Tag
        with:
          tagRegex: "Release[_](?<Package>.*)_v(?<Version>.*)"

      - name: Show Tag
        run: |
          echo "${{steps.Tag.outputs.Package}}"
          echo "${{steps.Tag.outputs.Version}}"
        env:
          NeedsPackage: ${{contains(steps.Tag.outputs.Package,'Desktop')}}

      # - uses: actions/setup-dotnet@v4
      #   with:
      #     dotnet-version: "9.0.x"
      #     dotnet-quality: "preview"

      # - name: restory
      #   run: dotnet restore

      # - name: build
      #   run: dotnet build

      # - name: test
      #   run: dotnet test --no-restore --no-build

  Push:
    needs: Build
    # if: ${{needs.Build.}}
    runs-on: windows-latest
    # work-directory: ${{steps.Tag.outputs.Package}}
    steps:
      - run: |
          echo ${{toJson(needs)}}
      # - name: publish
      #   run: dotnet publish -c Release --no-build --no-restore -o ./${{steps.Tag.outputs.Name}}_${{steps.Tag.outputs.Version}}

      # - name: zip
      #   uses: thedoctor0/zip-release@0.7.5
      #   with:
      #     type: zip
      #     filename: ${{env.FileName}}.zip
      #     path: ${{env.FileName}}

      # - name: push release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "${{env.FileName}}.zip"
      #     token: ${{secrets.RELEASE_TOKEN}}
